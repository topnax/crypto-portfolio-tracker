@page "/editportfolio/{portfolioId:int}"
@using Model
@using Services
@using Utils
@inject IPortfolioService PortfolioService
@inject IMatDialogService MatDialogService
@inject IMatToaster Toaster
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager


<style>
    .demo-mat-card {
        max-width: 400px;
        margin-bottom: 2em;
    }

    .demo-mat-card-content {
        padding: 1rem;
    }

    .clear-margin {
        margin: 0px;
    }
</style>

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell">
            <MatButton Outlined="true" Icon="keyboard_arrow_left" Style="margin-bottom:1em; margin-right: 1rem;" OnClick='() => { NavigationManager.NavigateTo($""); }'>Back</MatButton>
            <MatCard>
                <MatCardContent class="demo-mat-card-content">
                    <h2>Edit portfolio</h2>
                    <PortfolioForm
                        DefaultCurrency="@Currency.Usd"
                        AvailableCurrencies="@(EnumUtils.GetEnumList<Currency>())"
                        FormModel="FormModel"
                        Edit="true"
                        OnSubmitEventHandler="@OnCreateFormSubmitted">
                    </PortfolioForm>
                </MatCardContent>
            </MatCard>
        </div>
    </div>
</div>


@code
{
    [Parameter] public int PortfolioId { get; set; }

    public PortfolioForm.NewPortfolioModel FormModel = new(Currency.Usd);
    
    public Portfolio ActivePortfolio;

    protected override void OnInitialized()
    {
        ActivePortfolio = PortfolioService.GetPortfolio(PortfolioId);
        FormModel.Name = ActivePortfolio.Name;
        FormModel.Description = ActivePortfolio.Description;
    }

    private void OnCreateFormSubmitted(PortfolioForm.NewPortfolioModel formModel)
    {
        PortfolioService.UpdatePortfolio(ActivePortfolio with {
            Name = formModel.Name,
            Description = formModel.Description
            });
        formModel.Reset();
        Toaster.Add("Portfolio successfully edited", MatToastType.Success, "", "");
        NavigationManager.NavigateTo($"/portfolios/{ActivePortfolio.Id}");
    }
}